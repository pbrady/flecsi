#-----------------------------------------------------------------------------#
# FleCSI CI Configuration for ClearLinux
#------------------------------------------------------------------------------#

FROM clearlinux:latest

#------------------------------------------------------------------------------#
# Image arguments.
#------------------------------------------------------------------------------#

ARG SPACK_REPO
ARG SPACK_BRANCH
ARG SPACK_HASH

#------------------------------------------------------------------------------#
# Install basic linux requirements
#------------------------------------------------------------------------------#

RUN swupd bundle-add \
  c-basic \
  ccache \
  curl \
  doxygen \
  emacs \
  file \
  flex \
  git \
  less \
  llvm \
  make \
  man-pages \
  os-core-search \
  patch \
  python3-basic \
  rsync \
  sysadmin-basic \
  vim \
  wget \
  which

#------------------------------------------------------------------------------#
# Set root prompt
#------------------------------------------------------------------------------#

RUN echo "PS1=\"\[\033[1;31m\]root \[\e[38;5;160m\]>\[\e[38;5;166m\]>\[\e[38;5;172m\]>\[\033[0m\] \"" >> /root/.bashrc

#------------------------------------------------------------------------------#
# Add flecsi user
#------------------------------------------------------------------------------#

RUN groupadd -r flecsi
RUN useradd -r -m -g flecsi flecsi
RUN mkdir /etc/sudoers.d
RUN echo "flecsi ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/flecsi

USER flecsi
WORKDIR /home/flecsi

ADD --chown=flecsi:flecsi bashrc ./.bashrc
ADD --chown=flecsi:flecsi dircolors ./.dircolors
ADD --chown=flecsi:flecsi vimrc ./.vimrc

#------------------------------------------------------------------------------#
# Capture version information
#------------------------------------------------------------------------------#

RUN gcc -v 2>&1 | grep "gcc version" | awk '{ print $3 }' > .gnu_version

#------------------------------------------------------------------------------#
# Install pip packages
#------------------------------------------------------------------------------#

RUN pip3 install --user pyyaml
RUN pip3 install --user Sphinx
RUN pip3 install --user recommonmark
RUN pip3 install --user sphinx_rtd_theme

#------------------------------------------------------------------------------#
# Clone spack and create copy for the upstream install.
#------------------------------------------------------------------------------#

ARG EMPH="\e[38;5;36m"
ARG NEMPH="\e[0m"

RUN echo -e "${EMPH}Cloning spack: ${SPACK_BRANCH} at ${SPACK_HASH} from ${SPACK_REPO}${NEMPH}"
RUN git clone --single-branch --branch ${SPACK_BRANCH} ${SPACK_REPO} .spack
RUN if [[ "${SPACK_HASH}" != "HEAD" ]] ; \
      then cd .spack && git checkout -b "ci-${SPACK_HASH}" ${SPACK_HASH} ; \
    fi
RUN cp -r .spack .spack-upstream

#------------------------------------------------------------------------------#
# Set default shell for interactive
#------------------------------------------------------------------------------#

CMD /bin/bash

# vim: syntax=dockerfile
